ext{
    androidBuildToolsVersion = "28.0.0"
    androidMinSdkVersion = 23
    androidTargetSdkVersion = 28
    androidCompileSdkVersion = 28
    kotlinVersion = '1.3.11'
    dexVersion = '1.0.3'

    supportLibraryVersion = "28.0.0"
    constraintLayoutVersion = "1.1.3"

    rxJavaVersion = "2.2.5"
    javaxAnnotationVersion = "1.0"
    javaxInjectVersion = "1"
    rxKotlinVersion = "2.3.0"
    rxAndroidVersion = "2.1.0"

    androidAnnotationsVersion = "28.0.0"
    daggerVersion = "2.20"
    gsonVersion = "2.8.1"
    okHttpVersion = "3.12.0"
    retrofitVersion = "2.3.0"

    timberVersion = "4.7.1"
    glideVersion = "4.8.0"

    roomVersion = "1.1.1"
    archCompVersion = "1.1.1"
    glassfishAnnotationVersion = "10.0-b28"

    //Testing
    jUnitVersion = "4.12"
    assertJVersion = "3.11.1"
    robolectricVersion = "3.4.2"
    mockitoVersion = "2.1.0"
    mockitoAndroidVersion ="2.23.4"
    androidSupportRunnerVersion = "1.0.2"
    androidSupportRulesVersion = "1.0.2"
    espressoVersion = "3.0.2"

    oldMockitoKotlinVersion = "1.5.0"
    mobileUIMockitoAndroidVersion = "2.8.9"
    dexmakerMockitoversion = '2.2.0'
//    mobileUIMockitoAndroidVersion = "2.23.4"

    domainDependencies = [
            kotlin: "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlinVersion",
            javaxAnnotation: "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject: "javax.inject:javax.inject:${javaxInjectVersion}",
            rxJava: "io.reactivex.rxjava2:rxjava:${rxJavaVersion}"
    ]

    domainTestDependencies = [
            junit: "junit:junit:${jUnitVersion}",
            mockito: "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoVersion}",
            assertj: "org.assertj:assertj-core:${assertJVersion}"
    ]

    dataDependencies = [
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}"
    ]

    dataTestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoVersion}",
            mockitoinline:      "org.mockito:mockito-inline:${mockitoAndroidVersion}",
            robolectric:        "org.robolectric:robolectric:${robolectricVersion}"
    ]

    remoteDependencies = [
            gson:               "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            okHttp:             "com.squareup.okhttp3:okhttp:${okHttpVersion}",
            okHttpLogger:       "com.squareup.okhttp3:logging-interceptor:${okHttpVersion}",
            retrofit:           "com.squareup.retrofit2:retrofit:${retrofitVersion}",
            retrofitConverter:  "com.squareup.retrofit2:converter-gson:${retrofitVersion}",
            retrofitAdapter:    "com.squareup.retrofit2:adapter-rxjava2:${retrofitVersion}"
    ]

    remoteTestDependencies = [
            junit:                  "junit:junit:${jUnitVersion}",
            kotlinJUnit:            "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            assertj:                "org.assertj:assertj-core:${assertJVersion}",
            mockito:                "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoVersion}"
    ]

    cacheDependencies = [
            daggerCompiler:     "com.google.dagger:dagger-compiler:${daggerVersion}",
            dagger:             "com.google.dagger:dagger:${daggerVersion}",
            gson:               "com.google.code.gson:gson:${gsonVersion}",
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            roomRuntime:        "android.arch.persistence.room:runtime:${roomVersion}",
            roomCompiler:       "android.arch.persistence.room:compiler:${roomVersion}",
            roomRxJava:         "android.arch.persistence.room:rxjava2:${roomVersion}",
            dex:                "com.android.support:multidex:${dexVersion}"
    ]

    cacheTestDependencies = [
            junit:                  "junit:junit:${jUnitVersion}",
            kotlinJUnit:            "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            assertj:                "org.assertj:assertj-core:${assertJVersion}",
            mockito:                "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoVersion}",
            robolectric:            "org.robolectric:robolectric:${robolectricVersion}",
            roomTesting:            "android.arch.persistence.room:testing:${roomVersion}",
            archTesting:            "android.arch.core:core-testing:${roomVersion}",
            androidAnnotations:     "com.android.support:support-annotations:${androidAnnotationsVersion}"
    ]

    presentationDependencies = [
            kotlin:                 "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            archRuntime:        "android.arch.lifecycle:runtime:${archCompVersion}",
            archExtensions:     "android.arch.lifecycle:extensions:${archCompVersion}",
            archCompiler:       "android.arch.lifecycle:compiler:${archCompVersion}"
    ]

    presentationTestDependencies = [
            junit:                  "junit:junit:${jUnitVersion}",
            mockito:                "com.nhaarman.mockitokotlin2:mockito-kotlin:${mockitoVersion}",
            assertj:                "org.assertj:assertj-core:${assertJVersion}",
            robolectric:            "org.robolectric:robolectric:${robolectricVersion}",
            archTesting:            "android.arch.core:core-testing:${roomVersion}",
            mockitoinline:      "org.mockito:mockito-inline:${mockitoAndroidVersion}",

    ]

    mobileUIDependencies = [
            rxKotlin:           "io.reactivex.rxjava2:rxkotlin:${rxKotlinVersion}",
            rxAndroid:          "io.reactivex.rxjava2:rxandroid:${rxAndroidVersion}",
            rxJava:             "io.reactivex.rxjava2:rxjava:${rxJavaVersion}",
            glide:              "com.github.bumptech.glide:glide:${glideVersion}",
            glideCompiler:      "com.github.bumptech.glide:compiler:${glideVersion}",
            kotlin:             "org.jetbrains.kotlin:kotlin-stdlib-jdk7:${kotlinVersion}",
            javaxAnnotation:    "javax.annotation:jsr250-api:${javaxAnnotationVersion}",
            javaxInject:        "javax.inject:javax.inject:${javaxInjectVersion}",
            androidAnnotations: "com.android.support:support-annotations:${androidAnnotationsVersion}",
            androidSupportV4:   "com.android.support:support-v4:${supportLibraryVersion}",
            androidSupportV13:  "com.android.support:support-v13:${supportLibraryVersion}",
            appCompatV7:        "com.android.support:appcompat-v7:${supportLibraryVersion}",
            supportRecyclerView:"com.android.support:recyclerview-v7:${supportLibraryVersion}",
            constraintLayout:   "com.android.support.constraint:constraint-layout:${constraintLayoutVersion}",
            supportDesign:      "com.android.support:design:${supportLibraryVersion}",
            timber:             "com.jakewharton.timber:timber:${timberVersion}",
            dagger:             "com.google.dagger:dagger-android:${daggerVersion}",
            daggerSupport:      "com.google.dagger:dagger-android-support:${daggerVersion}",
            daggerCompiler:     "com.google.dagger:dagger-compiler:${daggerVersion}",
            daggerProcessor:    "com.google.dagger:dagger-android-processor:${daggerVersion}",
            glassfishAnnotation:"org.glassfish:javax.annotation:${glassfishAnnotationVersion}",
            roomRuntime:        "android.arch.persistence.room:runtime:${archCompVersion}",
            roomCompiler:       "android.arch.persistence.room:compiler:${archCompVersion}",
            roomRxJava:         "android.arch.persistence.room:rxjava2:${archCompVersion}",
            archRuntime:        "android.arch.lifecycle:runtime:${archCompVersion}",
            archExtensions:     "android.arch.lifecycle:extensions:${archCompVersion}",
            archCompiler:       "android.arch.lifecycle:compiler:${archCompVersion}",
            dex:                "com.android.support:multidex:${dexVersion}"
    ]

    mobileUITestDependencies = [
            junit:              "junit:junit:${jUnitVersion}",
            kotlinJUnit:        "org.jetbrains.kotlin:kotlin-test-junit:${kotlinVersion}",
            assertj:            "org.assertj:assertj-core:${assertJVersion}",
            mockito:            "com.nhaarman:mockito-kotlin:${oldMockitoKotlinVersion}",
            supportRunner:      "com.android.support.test:runner:${androidSupportRunnerVersion}",
            supportRules:       "com.android.support.test:rules:${androidSupportRulesVersion}",
            mockitoAndroid:     "org.mockito:mockito-android:${mobileUIMockitoAndroidVersion}",
            espressoCore:       "com.android.support.test.espresso:espresso-core:${espressoVersion}",
            espressoIntents:    "com.android.support.test.espresso:espresso-intents:${espressoVersion}",
            espressoContrib:    "com.android.support.test.espresso:espresso-contrib:${espressoVersion}"
    ]
}